name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # Step 3: Install backend dependencies (root)
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      # Step 4: Setup SSH for Deployment
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H dev.zealits.com >> ~/.ssh/known_hosts

      # Step 5: Deploy to the server
      - name: Deploy to server
        if: github.ref == 'refs/heads/main'
        run: |
          ssh admin@dev.zealits.com << 'EOF'
            cd ~/InterviewScheduler || exit
            
            # Stash any local changes and pull latest updates
            git reset --hard
            git pull origin main
            
            # Backup and restore config.env
            if [ -f ~/InterviewScheduler/backend/config/config.env ]; then
              cp ~/InterviewScheduler/backend/config/config.env ~/config.env.bak
            fi
            
            # Restore config.env if backed up
            if [ -f ~/config.env.bak ]; then
              mv ~/config.env.bak ~/InterviewScheduler/backend/config/config.env
            fi
            
            # Install backend dependencies
            cd backend
            npm install
            
            # Install frontend dependencies and build
            cd ../frontend
            npm install --force
            npm run build
            cd ..
            cd backend
            
            # Restart the application using PM2
            if pm2 list | grep -q "InterviewScheduler"; then
              echo "Restarting InterviewScheduler"
              pm2 restart InterviewScheduler
            else
              echo "Starting InterviewScheduler"
              pm2 start npm --name "InterviewScheduler" -- run dev
            fi
            
            # Check the status of PM2 processes
            pm2 list
          EOF
